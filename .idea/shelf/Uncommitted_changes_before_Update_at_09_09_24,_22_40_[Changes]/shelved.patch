Index: ../os-common/modules/desktop.nix
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{ pkgs, ... }: {\n  imports = [\n    ./common.nix\n  ];\n\n  # Users and groups\n\n  users.users = {\n    busti = {\n      extraGroups = [ \"networkmanager\" \"audio\" \"dialout\" \"bumblebee\" \"docker\" \"libvirt\" \"libvirtd\" ];\n      initialPassword = \"changeme\"; # fixme: remove for final install\n      # config = {\n      #   fetch = \"https://github.com/busti/dotfiles\";\n      #   push = \"git@github.com:busti/dotfiles\";\n      #   path = \".dotfiles\";\n      #   install = \"./install.sh\";\n      # };\n    };\n    bustus = {\n      isNormalUser = true;\n      initialPassword = \"changeme\"; # fixme: remove for final install\n    };\n  };\n\n  # System packages installed in by default\n\n  environment.systemPackages = with pkgs; [\n    home-manager\n    firefox brave\n    jetbrains-toolbox\n    rustup gcc gnumake cmake udev.dev\n    joplin-desktop\n    gparted\n    mesa-demos superTuxKart zeroad wesnoth openttd openrct2\n    logiops\n  ];\n\n  nixpkgs.config.permittedInsecurePackages = [\n    \"electron-25.9.0\"\n  ];\n\n  # Virtualisation\n\n  virtualisation.docker.enable = true;\n  programs.virt-manager.enable = true;\n  virtualisation.libvirtd = {\n    enable = true;\n    qemu = {\n      package = pkgs.qemu_kvm;\n      runAsRoot = true;\n      swtpm.enable = true;\n      ovmf = {\n        enable = true;\n        packages = [(pkgs.OVMF.override {\n          secureBoot = true;\n          tpmSupport = true;\n        }).fd];\n      };\n    };\n  };\n\n  #environment.etc.\"NetworkManager/dnsmasq.d/01-libvirt_dnsmasq.conf\".text = ''\n  #  server=/k8s.local/10.42.0.1\n  #  cache-size=1000\n  #  neg-ttl=60\n  #  min-cache-ttl=300\n  #  filterwin2k\n  #'';\n\n  #environment.etc.\"NetworkManager/dnsmasq.d/02-add-hosts.conf\".text = ''\n  #  addn-hosts=/etc/hosts\n  #'';\n\n  #networking.networkmanager.dns = \"dnsmasq\";\n\n  boot.extraModprobeConfig = \"options kvm_intel nested=1\";\n\n  # Printing\n\n  services.printing.enable = true;\n\n  # Enable sound with pipewire.\n  sound.enable = true;\n  hardware.pulseaudio.enable = false;\n  security.rtkit.enable = true;\n  services.pipewire = {\n    enable = true;\n    alsa.enable = true;\n    alsa.support32Bit = true;\n    pulse.enable = true;\n    # If you want to use JACK applications, uncomment this\n    #jack.enable = true;\n    # use the example session manager (no others are packaged yet so this is enabled by default,\n    # no need to redefine it in your config for now)\n    #media-session.enable = true;\n  };\n\n  # Enable direnv\n\n  programs.direnv.enable = true;\n\n  # Enable nix-ld for running binaries not compiled for nixos\n\n  programs.nix-ld.enable = true;\n  programs.nix-ld.libraries = with pkgs; [\n      SDL\n      SDL2\n      SDL2_image\n      SDL2_mixer\n      SDL2_ttf\n      SDL_image\n      SDL_mixer\n      SDL_ttf\n      alsa-lib\n      at-spi2-atk\n      at-spi2-core\n      atk\n      bzip2\n      cairo\n      cups\n      curlWithGnuTls\n      dbus\n      dbus-glib\n      desktop-file-utils\n      e2fsprogs\n      expat\n      flac\n      flite\n      fontconfig\n      freeglut\n      freetype\n      fribidi\n      fuse\n      fuse3\n      gdk-pixbuf\n      git\n      glew110\n      glib\n      gmp\n      gst_all_1.gst-plugins-base\n      gst_all_1.gst-plugins-ugly\n      gst_all_1.gstreamer\n      gtk2\n      harfbuzz\n      icu\n      keyutils.lib\n      libGL\n      libGLU\n      libappindicator-gtk2\n      libcaca\n      libcanberra\n      libcap\n      libclang.lib\n      libdbusmenu\n      libdrm\n      libgcrypt\n      libgpg-error\n      libidn\n      libjack2\n      libjpeg\n      libmikmod\n      libogg\n      libpng12\n      libpulseaudio\n      libsecret\n      librsvg\n      libsamplerate\n      libthai\n      libtheora\n      libtiff\n      libudev0-shim\n      libusb1\n      libuuid\n      libvdpau\n      libvorbis\n      libvpx\n      libxcrypt-legacy\n      libxkbcommon\n      libxml2\n      mesa\n      nspr\n      nss\n      openssl\n      p11-kit\n      pango\n      pixman\n      python3\n      speex\n      stdenv.cc.cc\n      tbb\n      udev\n      vulkan-loader\n      wayland\n      xorg.libICE\n      xorg.libSM\n      xorg.libX11\n      xorg.libXScrnSaver\n      xorg.libXcomposite\n      xorg.libXcursor\n      xorg.libXdamage\n      xorg.libXext\n      xorg.libXfixes\n      xorg.libXft\n      xorg.libXi\n      xorg.libXinerama\n      xorg.libXmu\n      xorg.libXrandr\n      xorg.libXrender\n      xorg.libXt\n      xorg.libXtst\n      xorg.libXxf86vm\n      xorg.libpciaccess\n      xorg.libxcb\n      xorg.xcbutil\n      xorg.xcbutilimage\n      xorg.xcbutilkeysyms\n      xorg.xcbutilrenderutil\n      xorg.xcbutilwm\n      xorg.xkeyboardconfig\n      xz\n      zlib\n  ];\n\n  # Set system clock to RTC for compatibility with dual-booting windows\n  time.hardwareClockInLocalTime = true;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../os-common/modules/desktop.nix b/../os-common/modules/desktop.nix
--- a/../os-common/modules/desktop.nix	(revision bccfcc13f024a74394bedae518dfadb72a2425c1)
+++ b/../os-common/modules/desktop.nix	(date 1725839351382)
@@ -33,6 +33,7 @@
     gparted
     mesa-demos superTuxKart zeroad wesnoth openttd openrct2
     logiops
+    iw
   ];
 
   nixpkgs.config.permittedInsecurePackages = [
Index: ../os-common/modules/common.nix
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{ pkgs, ... }: {\n  users.users = {\n    busti = {\n      isNormalUser = true;\n      extraGroups = [ \"wheel\" ];\n      openssh.authorizedKeys.keys = [\n        \"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEmnfrmahb/iKFchxvVyd55gfWKm/CYnpMuxvwVHVnoZ busti@styx\"\n      ];\n    };\n    root = {\n      hashedPassword = \"!\";\n    };\n  };\n\n  security.sudo.wheelNeedsPassword = false;\n\n  nix = {\n    settings.trusted-users = [ \"root\" \"@wheel\" \"@trusted\" \"build\" \"mbust\" \"busti\" ];\n    settings.experimental-features = [ \"nix-command\" \"flakes\" ];\n    gc = {\n      automatic = true;\n      dates = \"weekly\";\n      options = \"--delete-older-than 24d\";\n      persistent = true;\n      randomizedDelaySec = \"45min\";\n    };\n    #buildMachines = [{\n    #  hostName = \"builder\";\n    #  systems = [ \"x86_64-linux\" \"i686-linux\" ];\n    #  maxJobs = 32;\n    #  speedFactor = 2;\n    #  supportedFeatures = [ \"nixos-test\" \"benchmark\" \"big-parallel\" \"kvm\" ];\n    #  mandatoryFeatures = [ ];\n    #}];\n    distributedBuilds = true;\n    extraOptions = ''\n      builders-use-substitutes = true\n      min-free = ${toString (5 * 1024 * 1024 * 1024)}\n      max-free = ${toString (10 * 1024 * 1024 * 1024)}\n    '';\n  };\n\n  nixpkgs.config.allowUnfree = true;\n\n  programs.mtr.enable = true;\n\n  services = {\n    openssh = {\n      enable = true;\n      settings = {\n        PasswordAuthentication = false;\n        KbdInteractiveAuthentication = false;\n        PermitRootLogin = \"prohibit-password\";\n      };\n      openFirewall = false;\n    };\n  };\n\n  environment.systemPackages = with pkgs; [\n    git ripgrep htop vim tmux jq bat eza git gh\n    rsync wget curl tcpdump dig\n    pciutils inetutils pkg-config bintools-unwrapped\n    bitwarden-cli wireguard-tools\n    nix-index\n    bison flex fontforge makeWrapper pkg-config gnumake gcc libiconv autoconf automake libtool ncurses.dev ncurses5.dev ncurses6.dev\n    unrar p7zip zip unzip\n  ];\n\n  programs.bash.shellAliases = {\n    \"..\" = \"cd ..\";\n    use = \"nix-shell -p\";\n    cat = \"bat --style=header\";\n    grep = \"rg\";\n    ls = \"eza\";\n    ll = \"eza -l\";\n    la = \"eza -lagh --octal-permissions\";\n    tree = \"eza -T\";\n  };\n\n  networking.firewall.interfaces.wg0.allowedTCPPorts = [ 9091 ];\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../os-common/modules/common.nix b/../os-common/modules/common.nix
--- a/../os-common/modules/common.nix	(revision bccfcc13f024a74394bedae518dfadb72a2425c1)
+++ b/../os-common/modules/common.nix	(date 1725837391188)
@@ -58,7 +58,7 @@
 
   environment.systemPackages = with pkgs; [
     git ripgrep htop vim tmux jq bat eza git gh
-    rsync wget curl tcpdump dig
+    rsync wget curl tcpdump dig nmap
     pciutils inetutils pkg-config bintools-unwrapped
     bitwarden-cli wireguard-tools
     nix-index
